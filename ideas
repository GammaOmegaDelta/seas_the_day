koh samui, koh phangan, ao nang, koh lanta, bangkok, siem reap, kampot, koh rong samloem, phnom penh, ho chi minh saigon, phu quoc, da lat, nha trang, hoi an, phong nha, ninh binh, hanoi, halong bay, cat ba island, sa pa, vientiane, 4000 islands, pakse, vang vieng, phonsavan, luang prabang, pakbeng

--Follow Up 4/23--

--Postpone status will be an update action, make sure to add into activities controller and make sure it works before making the postpone/update action.---

~-~-~-Itineraries with html?(See mini_capstone)~-~-~-

API, which one to use? Need to make controller def index with response = HTTP.get(api) followed by render json: response.parse, will need to install get 'http' in gemfile.[video #29] hide api key by going to your profile within the api site and regenerate/get another api key. ---API Key storage cheat sheet to hide api key---

for HTML rails g controller itineraries, make folder within views and route will be outside the namespace. That folder will need a new file: index.html.erb


---4/28---
Worked on Vue. Finished up getting rid of 'photo' in edit. need to replace everything with corresponding data. After vue, make sure it works. Home route to be index? 

update: fixed show action on vue. left off working on edit action. make sure all routes work how they are intended too. If so, plssibly more front end customization.


--show path for vue--
<template>
  <div class="container">
    <h1>Show Itinerary</h1>
    <div>
      Name: <input type="text" v-model="newItineraryName">
      Country: <input type="text" v-model="newItineraryCountry">
      Category: <input type="text" v-model="newItineraryCategory">
      Description: <input type="text" v-model="newItineraryDescription">
      Address: <input type="text" v-model="newItineraryAddress">
      <button v-on:click="createItinerary()">Create Itinerary</button>
    </div>
    <h1>All Itineraries</h1>
    <div v-for="itinerary in itineraries">
      <h2>{{ itinerary.name }}</h2>
      <img v-bind:src="itinerary.url">
      <button v-on:click="showItinerary(itinerary)">Show more</button>
      <div v-if="currentItinerary === itinerary">
        <p>Country: {{ itinerary.country }}</p>
        <p>Category: {{ itinerary.category }}</p>
        <p>Description: {{ itinerary.description }}</p>
        <p>Address: {{ itinerary.address }}</p>
      </div>
    </div>
  </div>
</template>

<script>
import axios from "axios";

export default {
  data: function() {
    return {
      itineraries: [],
      currentItinerary: {},
      newItineraryName: "",
      newItineraryCountry: "",
      newItineraryCategory: "",
      newItineraryDescription: "",
      newItineraryAddress: "",
    };
  },
  created: function() {
    axios.get("/api/itineraries").then(response => {
      this.itineraries = response.data;
    });
  },
  methods: {
    createItinerary: function() {
      var params = {
        name: this.newItineraryName,
        country: this.newItineraryCountry,
        category: this.newItineraryCategory,
        description: this.newItineraryDescription,
        address: this.newItineraryAddress,
      };
      axios.post("/api/itineraries", params).then(response => {
        this.itineraries.push(response.data);
        this.newItineraryName = "";
        this.newItineraryCountry = "";
        this.newItineraryCategory = "";
        this.newItineraryDescription = "";
        this.newItineraryAddress = "";
      });
    },
    showItinerary: function(itinerary) {
      if (this.currentItinerary === itinerary) {
        this.currentItinerary = {};
      } else {
        this.currentItinerary = itinerary;
      }
    }
  }
};
</script>


